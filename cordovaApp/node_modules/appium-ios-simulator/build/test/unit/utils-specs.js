require('source-map-support').install();

'use strict';

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

var _this = this;

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _teen_process = require('teen_process');

var TeenProcess = _interopRequireWildcard(_teen_process);

var _appiumXcode = require('appium-xcode');

var _appiumXcode2 = _interopRequireDefault(_appiumXcode);

var _nodeSimctl = require('node-simctl');

var nodeSimctl = _interopRequireWildcard(_nodeSimctl);

var _ = require('../..');

var _assetsDeviceList = require('../assets/deviceList');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var XCODE_VERSION_7 = {
  versionString: '7.1.1',
  versionFloat: 7.1,
  major: 7,
  minor: 1,
  patch: 1
};
var XCODE_VERSION_6 = {
  versionString: '6.1.1',
  versionFloat: 6.1,
  major: 6,
  minor: 1,
  patch: 1
};

describe('util', function () {
  var execStub = undefined;
  var xcodeMock = undefined;
  var getDevicesStub = undefined;

  beforeEach(function () {
    execStub = _sinon2['default'].stub(TeenProcess, 'exec');
    xcodeMock = _sinon2['default'].mock(_appiumXcode2['default']);
    getDevicesStub = _sinon2['default'].stub(nodeSimctl, 'getDevices');
    getDevicesStub.returns(_Promise.resolve(_assetsDeviceList.devices));
  });
  afterEach(function () {
    execStub.restore();
    xcodeMock.restore();
    nodeSimctl.getDevices.restore();
  });

  describe('killAllSimulators', function () {
    it('should call exec with Simulator for Xcode 7', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            xcodeMock.expects('getVersion').withArgs(true).returns(_Promise.resolve(XCODE_VERSION_7));
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap((0, _.killAllSimulators)());

          case 3:
            execStub.calledOnce.should.be['true'];

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should call exec with iOS Simulator for Xcode 6', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            xcodeMock.expects('getVersion').withArgs(true).returns(_Promise.resolve(XCODE_VERSION_6));
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap((0, _.killAllSimulators)());

          case 3:
            execStub.calledOnce.should.be['true'];

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should continue if application is not running error gets thrown', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            xcodeMock.expects('getVersion').withArgs(true).returns(_Promise.resolve(XCODE_VERSION_7));
            execStub.throws('{"stdout":"","stderr":"0:24: execution error: iOS Simulator got an error: Application isnâ€™t running. (-600)\n","code":1}');
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap((0, _.killAllSimulators)());

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });

  describe('endAllSimulatorDaemons', function () {
    it('should call exec five times to stop and remove each service', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _.endAllSimulatorDaemons)());

          case 2:
            execStub.callCount.should.equal(5);

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should ignore all errors', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            execStub.throws();
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap((0, _.endAllSimulatorDaemons)().should.not.be.rejected);

          case 3:
            execStub.callCount.should.equal(5);
            execStub.threw().should.be['true'];

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });

  describe('simExists', function () {
    it('returns true if device is found', function callee$2$0() {
      var existence, results, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, result;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            existence = [(0, _.simExists)('C09B34E5-7DCB-442E-B79C-AB6BC0357417'), (0, _.simExists)('FA5C971D-4E05-4AA3-B48B-C9619C7453BE'), (0, _.simExists)('E46EFA59-E2B4-4FF9-B290-B61F3CFECC65'), (0, _.simExists)('F33783B2-9EE9-4A99-866E-E126ADBAD410')];
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(_bluebird2['default'].all(existence));

          case 3:
            results = context$3$0.sent;
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            context$3$0.prev = 7;

            for (_iterator = _getIterator(results); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              result = _step.value;

              result.should.be['true'];
            }
            context$3$0.next = 15;
            break;

          case 11:
            context$3$0.prev = 11;
            context$3$0.t0 = context$3$0['catch'](7);
            _didIteratorError = true;
            _iteratorError = context$3$0.t0;

          case 15:
            context$3$0.prev = 15;
            context$3$0.prev = 16;

            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }

          case 18:
            context$3$0.prev = 18;

            if (!_didIteratorError) {
              context$3$0.next = 21;
              break;
            }

            throw _iteratorError;

          case 21:
            return context$3$0.finish(18);

          case 22:
            return context$3$0.finish(15);

          case 23:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this, [[7, 11, 15, 23], [16,, 18, 22]]);
    });

    it('returns false if device is not found', function callee$2$0() {
      var existence, results, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, result;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            existence = [];

            existence.push((0, _.simExists)('A94E4CD7-D412-4198-BCD4-26799672975E'));
            existence.push((0, _.simExists)('asdf'));
            existence.push((0, _.simExists)(4));

            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(_bluebird2['default'].all(existence));

          case 6:
            results = context$3$0.sent;
            _iteratorNormalCompletion2 = true;
            _didIteratorError2 = false;
            _iteratorError2 = undefined;
            context$3$0.prev = 10;

            for (_iterator2 = _getIterator(results); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              result = _step2.value;

              result.should.be['false'];
            }
            context$3$0.next = 18;
            break;

          case 14:
            context$3$0.prev = 14;
            context$3$0.t0 = context$3$0['catch'](10);
            _didIteratorError2 = true;
            _iteratorError2 = context$3$0.t0;

          case 18:
            context$3$0.prev = 18;
            context$3$0.prev = 19;

            if (!_iteratorNormalCompletion2 && _iterator2['return']) {
              _iterator2['return']();
            }

          case 21:
            context$3$0.prev = 21;

            if (!_didIteratorError2) {
              context$3$0.next = 24;
              break;
            }

            throw _iteratorError2;

          case 24:
            return context$3$0.finish(21);

          case 25:
            return context$3$0.finish(18);

          case 26:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this, [[10, 14, 18, 26], [19,, 21, 25]]);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
