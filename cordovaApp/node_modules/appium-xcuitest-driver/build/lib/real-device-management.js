'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _teen_process = require('teen_process');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function getConnectedDevices() {
  var _ref, stdout;

  return _regeneratorRuntime.async(function getConnectedDevices$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('idevice_id', ['-l']));

      case 2:
        _ref = context$1$0.sent;
        stdout = _ref.stdout;
        return context$1$0.abrupt('return', stdout.trim().split('\n'));

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function resetRealDevice(device, opts) {
  var bundleId;
  return _regeneratorRuntime.async(function resetRealDevice$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!(opts.bundleId && opts.fullReset)) {
          context$1$0.next = 13;
          break;
        }

        bundleId = opts.bundleId;

        _logger2['default'].debug('Full reset requested. Will try to uninstall the app \'' + bundleId + '\'.');
        context$1$0.prev = 3;
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(device.remove(bundleId));

      case 6:
        context$1$0.next = 12;
        break;

      case 8:
        context$1$0.prev = 8;
        context$1$0.t0 = context$1$0['catch'](3);

        _logger2['default'].error('Could not remove \'' + bundleId + '\' from device');
        throw context$1$0.t0;

      case 12:
        _logger2['default'].debug('Removed \'' + bundleId + '\'');

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[3, 8]]);
}

function runRealDeviceReset(device, opts) {
  return _regeneratorRuntime.async(function runRealDeviceReset$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!(!opts.noReset || opts.fullReset)) {
          context$1$0.next = 7;
          break;
        }

        _logger2['default'].debug('Running ios real device reset flow');

        if (opts.noReset) {
          context$1$0.next = 5;
          break;
        }

        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(resetRealDevice(device, opts));

      case 5:
        context$1$0.next = 8;
        break;

      case 7:
        _logger2['default'].debug("Reset not set, continuing");

      case 8:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.getConnectedDevices = getConnectedDevices;
exports.runRealDeviceReset = runRealDeviceReset;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9yZWFsLWRldmljZS1tYW5hZ2VtZW50LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7NEJBQXFCLGNBQWM7O3NCQUNuQixVQUFVOzs7O0FBRzFCLFNBQWUsbUJBQW1CO1lBQzNCLE1BQU07Ozs7Ozt5Q0FBVSx3QkFBSyxZQUFZLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQzs7OztBQUExQyxjQUFNLFFBQU4sTUFBTTs0Q0FDSixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQzs7Ozs7OztDQUNqQzs7QUFFRCxTQUFlLGVBQWUsQ0FBRSxNQUFNLEVBQUUsSUFBSTtNQUVwQyxRQUFROzs7O2NBRFYsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFBOzs7OztBQUM3QixnQkFBUSxHQUFHLElBQUksQ0FBQyxRQUFROztBQUM1Qiw0QkFBSSxLQUFLLDREQUF5RCxRQUFRLFNBQUssQ0FBQzs7O3lDQUV4RSxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQzs7Ozs7Ozs7OztBQUU3Qiw0QkFBSSxLQUFLLHlCQUFzQixRQUFRLG9CQUFnQixDQUFDOzs7O0FBRzFELDRCQUFJLEtBQUssZ0JBQWEsUUFBUSxRQUFJLENBQUM7Ozs7Ozs7Q0FFdEM7O0FBRUQsU0FBZSxrQkFBa0IsQ0FBRSxNQUFNLEVBQUUsSUFBSTs7OztjQUN6QyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQTs7Ozs7QUFDakMsNEJBQUksS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7O1lBQzNDLElBQUksQ0FBQyxPQUFPOzs7Ozs7eUNBQ1QsZUFBZSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUM7Ozs7Ozs7QUFHckMsNEJBQUksS0FBSyxDQUFDLDJCQUEyQixDQUFDLENBQUM7Ozs7Ozs7Q0FFMUM7O1FBRVEsbUJBQW1CLEdBQW5CLG1CQUFtQjtRQUFFLGtCQUFrQixHQUFsQixrQkFBa0IiLCJmaWxlIjoibGliL3JlYWwtZGV2aWNlLW1hbmFnZW1lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleGVjIH0gZnJvbSAndGVlbl9wcm9jZXNzJztcbmltcG9ydCBsb2cgZnJvbSAnLi9sb2dnZXInO1xuXG5cbmFzeW5jIGZ1bmN0aW9uIGdldENvbm5lY3RlZERldmljZXMgKCkge1xuICBsZXQge3N0ZG91dH0gPSBhd2FpdCBleGVjKCdpZGV2aWNlX2lkJywgWyctbCddKTtcbiAgcmV0dXJuIHN0ZG91dC50cmltKCkuc3BsaXQoJ1xcbicpO1xufVxuXG5hc3luYyBmdW5jdGlvbiByZXNldFJlYWxEZXZpY2UgKGRldmljZSwgb3B0cykge1xuICBpZiAob3B0cy5idW5kbGVJZCAmJiBvcHRzLmZ1bGxSZXNldCkge1xuICAgIGxldCBidW5kbGVJZCA9IG9wdHMuYnVuZGxlSWQ7XG4gICAgbG9nLmRlYnVnKGBGdWxsIHJlc2V0IHJlcXVlc3RlZC4gV2lsbCB0cnkgdG8gdW5pbnN0YWxsIHRoZSBhcHAgJyR7YnVuZGxlSWR9Jy5gKTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZGV2aWNlLnJlbW92ZShidW5kbGVJZCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBsb2cuZXJyb3IoYENvdWxkIG5vdCByZW1vdmUgJyR7YnVuZGxlSWR9JyBmcm9tIGRldmljZWApO1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICBsb2cuZGVidWcoYFJlbW92ZWQgJyR7YnVuZGxlSWR9J2ApO1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJ1blJlYWxEZXZpY2VSZXNldCAoZGV2aWNlLCBvcHRzKSB7XG4gIGlmICghb3B0cy5ub1Jlc2V0IHx8IG9wdHMuZnVsbFJlc2V0KSB7XG4gICAgbG9nLmRlYnVnKCdSdW5uaW5nIGlvcyByZWFsIGRldmljZSByZXNldCBmbG93Jyk7XG4gICAgaWYgKCFvcHRzLm5vUmVzZXQpIHtcbiAgICAgIGF3YWl0IHJlc2V0UmVhbERldmljZShkZXZpY2UsIG9wdHMpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsb2cuZGVidWcoXCJSZXNldCBub3Qgc2V0LCBjb250aW51aW5nXCIpO1xuICB9XG59XG5cbmV4cG9ydCB7IGdldENvbm5lY3RlZERldmljZXMsIHJ1blJlYWxEZXZpY2VSZXNldCB9O1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
