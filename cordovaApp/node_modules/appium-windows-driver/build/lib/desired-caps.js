'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var desiredCapConstraints = {
  platformName: {
    presence: true,
    isString: true,
    inclusionCaseInsensitive: ['Windows']
  },
  browserName: {
    isString: true
  },
  app: {
    isString: true
  },

  launchTimeout: {
    // recognize the cap,
    // but validate in the driver#validateDesiredCaps method
  },
  calendarFormat: {
    isString: true
  },
  bundleId: {
    isString: true
  },
  udid: {
    isString: true
  },
  locationServicesEnabled: {
    isBoolean: true
  },
  locationServicesAuthorized: {
    isBoolean: true
  },
  autoAcceptAlerts: {
    isBoolean: true
  },
  autoDismissAlerts: {
    isBoolean: true
  },
  nativeInstrumentsLib: {
    isBoolean: true
  },
  nativeWebTap: {
    isBoolean: true
  },
  safariInitialUrl: {
    isString: true
  },
  safariAllowPopups: {
    isBoolean: true
  },
  safariIgnoreFraudWarning: {
    isBoolean: true
  },
  safariOpenLinksInBackground: {
    isBoolean: true
  },
  keepKeyChains: {
    isBoolean: true
  },
  localizableStringsDir: {
    isString: true
  },
  processArguments: {
    // recognize the cap,
    // but validate in the driver#validateDesiredCaps method
  },
  interKeyDelay: {
    isNumber: true
  },
  showIOSLog: {
    isBoolean: true
  },
  sendKeyStrategy: {
    isString: true,
    inclusion: ['oneByOne', 'grouped', 'setValue']
  },
  screenshotWaitTimeout: {
    isNumber: true
  },
  waitForAppScript: {
    isString: true
  },
  webviewConnectRetries: {
    isNumber: true
  },
  appName: {
    isString: true
  }
};

exports['default'] = desiredCapConstraints;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYlxcZGVzaXJlZC1jYXBzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQU0scUJBQXFCLEdBQUc7QUFDNUIsY0FBWSxFQUFFO0FBQ1osWUFBUSxFQUFFLElBQUk7QUFDZCxZQUFRLEVBQUUsSUFBSTtBQUNkLDRCQUF3QixFQUFFLENBQUMsU0FBUyxDQUFDO0dBQ3RDO0FBQ0QsYUFBVyxFQUFFO0FBQ1gsWUFBUSxFQUFFLElBQUk7R0FDZjtBQUNELEtBQUcsRUFBRTtBQUNILFlBQVEsRUFBRSxJQUFJO0dBQ2Y7O0FBRUQsZUFBYSxFQUFFOzs7R0FHZDtBQUNELGdCQUFjLEVBQUU7QUFDZCxZQUFRLEVBQUUsSUFBSTtHQUNmO0FBQ0QsVUFBUSxFQUFFO0FBQ1IsWUFBUSxFQUFFLElBQUk7R0FDZjtBQUNELE1BQUksRUFBRTtBQUNKLFlBQVEsRUFBRSxJQUFJO0dBQ2Y7QUFDRCx5QkFBdUIsRUFBRTtBQUN2QixhQUFTLEVBQUUsSUFBSTtHQUNoQjtBQUNELDRCQUEwQixFQUFFO0FBQzFCLGFBQVMsRUFBRSxJQUFJO0dBQ2hCO0FBQ0Qsa0JBQWdCLEVBQUU7QUFDaEIsYUFBUyxFQUFFLElBQUk7R0FDaEI7QUFDRCxtQkFBaUIsRUFBRTtBQUNqQixhQUFTLEVBQUUsSUFBSTtHQUNoQjtBQUNELHNCQUFvQixFQUFFO0FBQ3BCLGFBQVMsRUFBRSxJQUFJO0dBQ2hCO0FBQ0QsY0FBWSxFQUFFO0FBQ1osYUFBUyxFQUFFLElBQUk7R0FDaEI7QUFDRCxrQkFBZ0IsRUFBRTtBQUNoQixZQUFRLEVBQUUsSUFBSTtHQUNmO0FBQ0QsbUJBQWlCLEVBQUU7QUFDakIsYUFBUyxFQUFFLElBQUk7R0FDaEI7QUFDRCwwQkFBd0IsRUFBRTtBQUN4QixhQUFTLEVBQUUsSUFBSTtHQUNoQjtBQUNELDZCQUEyQixFQUFFO0FBQzNCLGFBQVMsRUFBRSxJQUFJO0dBQ2hCO0FBQ0QsZUFBYSxFQUFFO0FBQ2IsYUFBUyxFQUFFLElBQUk7R0FDaEI7QUFDRCx1QkFBcUIsRUFBRTtBQUNyQixZQUFRLEVBQUUsSUFBSTtHQUNmO0FBQ0Qsa0JBQWdCLEVBQUU7OztHQUdqQjtBQUNELGVBQWEsRUFBRTtBQUNiLFlBQVEsRUFBRSxJQUFJO0dBQ2Y7QUFDRCxZQUFVLEVBQUU7QUFDVixhQUFTLEVBQUUsSUFBSTtHQUNoQjtBQUNELGlCQUFlLEVBQUU7QUFDZixZQUFRLEVBQUUsSUFBSTtBQUNkLGFBQVMsRUFBRSxDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFDO0dBQy9DO0FBQ0QsdUJBQXFCLEVBQUU7QUFDckIsWUFBUSxFQUFFLElBQUk7R0FDZjtBQUNELGtCQUFnQixFQUFFO0FBQ2hCLFlBQVEsRUFBRSxJQUFJO0dBQ2Y7QUFDRCx1QkFBcUIsRUFBRTtBQUNyQixZQUFRLEVBQUUsSUFBSTtHQUNmO0FBQ0QsU0FBTyxFQUFFO0FBQ1AsWUFBUSxFQUFFLElBQUk7R0FDZjtDQUNGLENBQUM7O3FCQUVhLHFCQUFxQiIsImZpbGUiOiJsaWJcXGRlc2lyZWQtY2Fwcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuY29uc3QgZGVzaXJlZENhcENvbnN0cmFpbnRzID0ge1xyXG4gIHBsYXRmb3JtTmFtZToge1xyXG4gICAgcHJlc2VuY2U6IHRydWUsXHJcbiAgICBpc1N0cmluZzogdHJ1ZSxcclxuICAgIGluY2x1c2lvbkNhc2VJbnNlbnNpdGl2ZTogWydXaW5kb3dzJ11cclxuICB9LFxyXG4gIGJyb3dzZXJOYW1lOiB7XHJcbiAgICBpc1N0cmluZzogdHJ1ZVxyXG4gIH0sXHJcbiAgYXBwOiB7XHJcbiAgICBpc1N0cmluZzogdHJ1ZVxyXG4gIH0sXHJcblxyXG4gIGxhdW5jaFRpbWVvdXQ6IHtcclxuICAgIC8vIHJlY29nbml6ZSB0aGUgY2FwLFxyXG4gICAgLy8gYnV0IHZhbGlkYXRlIGluIHRoZSBkcml2ZXIjdmFsaWRhdGVEZXNpcmVkQ2FwcyBtZXRob2RcclxuICB9LFxyXG4gIGNhbGVuZGFyRm9ybWF0OiB7XHJcbiAgICBpc1N0cmluZzogdHJ1ZVxyXG4gIH0sXHJcbiAgYnVuZGxlSWQ6IHtcclxuICAgIGlzU3RyaW5nOiB0cnVlXHJcbiAgfSxcclxuICB1ZGlkOiB7XHJcbiAgICBpc1N0cmluZzogdHJ1ZVxyXG4gIH0sXHJcbiAgbG9jYXRpb25TZXJ2aWNlc0VuYWJsZWQ6IHtcclxuICAgIGlzQm9vbGVhbjogdHJ1ZVxyXG4gIH0sXHJcbiAgbG9jYXRpb25TZXJ2aWNlc0F1dGhvcml6ZWQ6IHtcclxuICAgIGlzQm9vbGVhbjogdHJ1ZVxyXG4gIH0sXHJcbiAgYXV0b0FjY2VwdEFsZXJ0czoge1xyXG4gICAgaXNCb29sZWFuOiB0cnVlXHJcbiAgfSxcclxuICBhdXRvRGlzbWlzc0FsZXJ0czoge1xyXG4gICAgaXNCb29sZWFuOiB0cnVlXHJcbiAgfSxcclxuICBuYXRpdmVJbnN0cnVtZW50c0xpYjoge1xyXG4gICAgaXNCb29sZWFuOiB0cnVlXHJcbiAgfSxcclxuICBuYXRpdmVXZWJUYXA6IHtcclxuICAgIGlzQm9vbGVhbjogdHJ1ZVxyXG4gIH0sXHJcbiAgc2FmYXJpSW5pdGlhbFVybDoge1xyXG4gICAgaXNTdHJpbmc6IHRydWVcclxuICB9LFxyXG4gIHNhZmFyaUFsbG93UG9wdXBzOiB7XHJcbiAgICBpc0Jvb2xlYW46IHRydWVcclxuICB9LFxyXG4gIHNhZmFyaUlnbm9yZUZyYXVkV2FybmluZzoge1xyXG4gICAgaXNCb29sZWFuOiB0cnVlXHJcbiAgfSxcclxuICBzYWZhcmlPcGVuTGlua3NJbkJhY2tncm91bmQ6IHtcclxuICAgIGlzQm9vbGVhbjogdHJ1ZVxyXG4gIH0sXHJcbiAga2VlcEtleUNoYWluczoge1xyXG4gICAgaXNCb29sZWFuOiB0cnVlXHJcbiAgfSxcclxuICBsb2NhbGl6YWJsZVN0cmluZ3NEaXI6IHtcclxuICAgIGlzU3RyaW5nOiB0cnVlXHJcbiAgfSxcclxuICBwcm9jZXNzQXJndW1lbnRzOiB7XHJcbiAgICAvLyByZWNvZ25pemUgdGhlIGNhcCxcclxuICAgIC8vIGJ1dCB2YWxpZGF0ZSBpbiB0aGUgZHJpdmVyI3ZhbGlkYXRlRGVzaXJlZENhcHMgbWV0aG9kXHJcbiAgfSxcclxuICBpbnRlcktleURlbGF5OiB7XHJcbiAgICBpc051bWJlcjogdHJ1ZVxyXG4gIH0sXHJcbiAgc2hvd0lPU0xvZzoge1xyXG4gICAgaXNCb29sZWFuOiB0cnVlXHJcbiAgfSxcclxuICBzZW5kS2V5U3RyYXRlZ3k6IHtcclxuICAgIGlzU3RyaW5nOiB0cnVlLFxyXG4gICAgaW5jbHVzaW9uOiBbJ29uZUJ5T25lJywgJ2dyb3VwZWQnLCAnc2V0VmFsdWUnXVxyXG4gIH0sXHJcbiAgc2NyZWVuc2hvdFdhaXRUaW1lb3V0OiB7XHJcbiAgICBpc051bWJlcjogdHJ1ZVxyXG4gIH0sXHJcbiAgd2FpdEZvckFwcFNjcmlwdDoge1xyXG4gICAgaXNTdHJpbmc6IHRydWVcclxuICB9LFxyXG4gIHdlYnZpZXdDb25uZWN0UmV0cmllczoge1xyXG4gICAgaXNOdW1iZXI6IHRydWVcclxuICB9LFxyXG4gIGFwcE5hbWU6IHtcclxuICAgIGlzU3RyaW5nOiB0cnVlXHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGVzaXJlZENhcENvbnN0cmFpbnRzO1xyXG4iXX0=