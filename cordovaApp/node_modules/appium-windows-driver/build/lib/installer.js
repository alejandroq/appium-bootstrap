'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _appiumSupport = require('appium-support');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _teen_process = require('teen_process');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

// TODO: get release up on github so we can version it
var WAD_VER = "0.4-beta";
var WAD_DL = 'https://github.com/Microsoft/WinAppDriver/releases/download/v' + WAD_VER + '/WindowsApplicationDriver.msi';
var WAD_DL_MD5 = "e1a4dc4d6bd37f32e26808ac6953e7e2";
var WAD_INSTALL_PATH = process.env["ProgramFiles(x86)"] || process.env.ProgramFiles || "C:\\Program Files";
exports.WAD_INSTALL_PATH = WAD_INSTALL_PATH = _path2['default'].resolve(WAD_INSTALL_PATH, "Windows Application Driver", "WinAppDriver.exe");
var WAD_EXE_MD5 = "03285085e8240eabe2b510a54636f622";
var WAD_GUID = "DDCD58BF-37CF-4758-A15E-A60E7CF20E41";

function downloadWAD() {
  var tempFile, body, downloadedMd5;
  return _regeneratorRuntime.async(function downloadWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info('Opening temp file to write WinAppDriver to...');
        tempFile = _path2['default'].resolve(process.env.TEMP, "WinAppDriver.msi");

        _logger2['default'].info('Will write to ' + tempFile);

        // actually download the msi file
        _logger2['default'].info('Downloading ' + WAD_DL + '...');
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(_requestPromise2['default'].get({ url: WAD_DL, encoding: 'binary' }));

      case 6:
        body = context$1$0.sent;

        _logger2['default'].info('Writing binary content to ' + tempFile + '...');
        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(tempFile, body, { encoding: 'binary' }));

      case 10:
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.md5(tempFile));

      case 12:
        downloadedMd5 = context$1$0.sent;

        if (!(downloadedMd5 !== WAD_DL_MD5)) {
          context$1$0.next = 15;
          break;
        }

        throw new Error('Checksum validation error: expected ' + WAD_DL_MD5 + ' but ' + ('got ' + downloadedMd5));

      case 15:
        return context$1$0.abrupt('return', tempFile);

      case 16:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function installWAD(msiPath) {
  return _regeneratorRuntime.async(function installWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info("Running MSI installer...");
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('msiexec', ['/i', msiPath, '/qn']));

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function verifyWAD() {
  return _regeneratorRuntime.async(function verifyWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].info("Verifying WinAppDriver is installed with correct checksum");
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(WAD_INSTALL_PATH));

      case 3:
        context$1$0.t0 = context$1$0.sent;

        if (!context$1$0.t0) {
          context$1$0.next = 10;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.md5(WAD_INSTALL_PATH));

      case 7:
        context$1$0.t1 = context$1$0.sent;
        context$1$0.t2 = WAD_EXE_MD5;
        context$1$0.t0 = context$1$0.t1 === context$1$0.t2;

      case 10:
        return context$1$0.abrupt('return', context$1$0.t0);

      case 11:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function isAdmin() {
  var testFilePath;
  return _regeneratorRuntime.async(function isAdmin$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        testFilePath = _path2['default'].resolve("/", "Windows", "System32", "wad-test.txt");
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.rimraf(testFilePath));

      case 4:
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(testFilePath, "foo"));

      case 6:
        return context$1$0.abrupt('return', true);

      case 9:
        context$1$0.prev = 9;
        context$1$0.t0 = context$1$0['catch'](1);
        return context$1$0.abrupt('return', false);

      case 12:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 9]]);
}

function setupWAD() {
  var msiPath;
  return _regeneratorRuntime.async(function setupWAD$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (_appiumSupport.system.isWindows()) {
          context$1$0.next = 2;
          break;
        }

        throw new Error("Can only download WinAppDriver on Windows!");

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(verifyWAD());

      case 4:
        if (!context$1$0.sent) {
          context$1$0.next = 7;
          break;
        }

        _logger2['default'].info("WinAppDriver.exe already exists at correct checksum, " + "not re-downloading");
        return context$1$0.abrupt('return');

      case 7:

        _logger2['default'].info("WinAppDriver.exe doesn't exist at the correct version, setting up");

        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(isAdmin());

      case 10:
        if (context$1$0.sent) {
          context$1$0.next = 12;
          break;
        }

        throw new Error("You are not an administrator; please reinstall as admin");

      case 12:
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(downloadWAD());

      case 14:
        msiPath = context$1$0.sent;
        context$1$0.next = 17;
        return _regeneratorRuntime.awrap(installWAD(msiPath));

      case 17:
        context$1$0.next = 19;
        return _regeneratorRuntime.awrap(verifyWAD());

      case 19:
        if (context$1$0.sent) {
          context$1$0.next = 21;
          break;
        }

        throw new Error("Installed version of WinAppDriver failed checksum check");

      case 21:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.downloadWAD = downloadWAD;
exports.setupWAD = setupWAD;
exports.verifyWAD = verifyWAD;
exports.installWAD = installWAD;
exports.WAD_INSTALL_PATH = WAD_INSTALL_PATH;
exports.WAD_GUID = WAD_GUID;
exports['default'] = setupWAD;

// validate checksum
//# sourceMappingURL=data:application/json;base64,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Q3BELG9CQUFvQixDQUFDLENBQUM7Ozs7O0FBSXBDLDRCQUFJLElBQUksQ0FBQyxtRUFBbUUsQ0FBQyxDQUFDOzs7eUNBRW5FLE9BQU8sRUFBRTs7Ozs7Ozs7Y0FDWixJQUFJLEtBQUssQ0FBQyx5REFBeUQsQ0FBQzs7Ozt5Q0FHdEQsV0FBVyxFQUFFOzs7QUFBN0IsZUFBTzs7eUNBQ1AsVUFBVSxDQUFDLE9BQU8sQ0FBQzs7Ozt5Q0FDZCxTQUFTLEVBQUU7Ozs7Ozs7O2NBQ2QsSUFBSSxLQUFLLENBQUMseURBQXlELENBQUM7Ozs7Ozs7Q0FFN0U7O1FBRVEsV0FBVyxHQUFYLFdBQVc7UUFBRSxRQUFRLEdBQVIsUUFBUTtRQUFFLFNBQVMsR0FBVCxTQUFTO1FBQUUsVUFBVSxHQUFWLFVBQVU7UUFBRSxnQkFBZ0IsR0FBaEIsZ0JBQWdCO1FBQzlELFFBQVEsR0FBUixRQUFRO3FCQUNGLFFBQVEiLCJmaWxlIjoibGliXFxpbnN0YWxsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVxdWVzdCBmcm9tICdyZXF1ZXN0LXByb21pc2UnO1xyXG5pbXBvcnQgeyBzeXN0ZW0sIGZzIH0gZnJvbSAnYXBwaXVtLXN1cHBvcnQnO1xyXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0IHsgZXhlYyB9IGZyb20gJ3RlZW5fcHJvY2Vzcyc7XHJcbmltcG9ydCBsb2cgZnJvbSAnLi9sb2dnZXInO1xyXG5cclxuLy8gVE9ETzogZ2V0IHJlbGVhc2UgdXAgb24gZ2l0aHViIHNvIHdlIGNhbiB2ZXJzaW9uIGl0XHJcbmNvbnN0IFdBRF9WRVIgPSBcIjAuNC1iZXRhXCI7XHJcbmNvbnN0IFdBRF9ETCA9IGBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1dpbkFwcERyaXZlci9yZWxlYXNlcy9kb3dubG9hZC92JHtXQURfVkVSfS9XaW5kb3dzQXBwbGljYXRpb25Ecml2ZXIubXNpYDtcclxuY29uc3QgV0FEX0RMX01ENSA9IFwiZTFhNGRjNGQ2YmQzN2YzMmUyNjgwOGFjNjk1M2U3ZTJcIjtcclxubGV0IFdBRF9JTlNUQUxMX1BBVEggPSBwcm9jZXNzLmVudltcIlByb2dyYW1GaWxlcyh4ODYpXCJdIHx8IHByb2Nlc3MuZW52LlByb2dyYW1GaWxlcyB8fCBcIkM6XFxcXFByb2dyYW0gRmlsZXNcIjtcclxuV0FEX0lOU1RBTExfUEFUSCA9IHBhdGgucmVzb2x2ZShXQURfSU5TVEFMTF9QQVRILCBcIldpbmRvd3MgQXBwbGljYXRpb24gRHJpdmVyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJXaW5BcHBEcml2ZXIuZXhlXCIpO1xyXG5jb25zdCBXQURfRVhFX01ENSA9IFwiMDMyODUwODVlODI0MGVhYmUyYjUxMGE1NDYzNmY2MjJcIjtcclxuY29uc3QgV0FEX0dVSUQgPSBcIkREQ0Q1OEJGLTM3Q0YtNDc1OC1BMTVFLUE2MEU3Q0YyMEU0MVwiO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gZG93bmxvYWRXQUQgKCkge1xyXG4gIGxvZy5pbmZvKGBPcGVuaW5nIHRlbXAgZmlsZSB0byB3cml0ZSBXaW5BcHBEcml2ZXIgdG8uLi5gKTtcclxuICBsZXQgdGVtcEZpbGUgPSBwYXRoLnJlc29sdmUocHJvY2Vzcy5lbnYuVEVNUCwgXCJXaW5BcHBEcml2ZXIubXNpXCIpO1xyXG4gIGxvZy5pbmZvKGBXaWxsIHdyaXRlIHRvICR7dGVtcEZpbGV9YCk7XHJcblxyXG4gIC8vIGFjdHVhbGx5IGRvd25sb2FkIHRoZSBtc2kgZmlsZVxyXG4gIGxvZy5pbmZvKGBEb3dubG9hZGluZyAke1dBRF9ETH0uLi5gKTtcclxuICBsZXQgYm9keSA9IGF3YWl0IHJlcXVlc3QuZ2V0KHt1cmw6IFdBRF9ETCwgZW5jb2Rpbmc6ICdiaW5hcnknfSk7XHJcbiAgbG9nLmluZm8oYFdyaXRpbmcgYmluYXJ5IGNvbnRlbnQgdG8gJHt0ZW1wRmlsZX0uLi5gKTtcclxuICBhd2FpdCBmcy53cml0ZUZpbGUodGVtcEZpbGUsIGJvZHksIHtlbmNvZGluZzogJ2JpbmFyeSd9KTtcclxuXHJcbiAgLy8gdmFsaWRhdGUgY2hlY2tzdW1cclxuICBsZXQgZG93bmxvYWRlZE1kNSA9IGF3YWl0IGZzLm1kNSh0ZW1wRmlsZSk7XHJcbiAgaWYgKGRvd25sb2FkZWRNZDUgIT09IFdBRF9ETF9NRDUpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgQ2hlY2tzdW0gdmFsaWRhdGlvbiBlcnJvcjogZXhwZWN0ZWQgJHtXQURfRExfTUQ1fSBidXQgYCArXHJcbiAgICAgICAgICAgICAgICAgICAgYGdvdCAke2Rvd25sb2FkZWRNZDV9YCk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gdGVtcEZpbGU7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGluc3RhbGxXQUQgKG1zaVBhdGgpIHtcclxuICBsb2cuaW5mbyhcIlJ1bm5pbmcgTVNJIGluc3RhbGxlci4uLlwiKTtcclxuICBhd2FpdCBleGVjKCdtc2lleGVjJywgWycvaScsIG1zaVBhdGgsICcvcW4nXSk7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHZlcmlmeVdBRCAoKSB7XHJcbiAgbG9nLmluZm8oXCJWZXJpZnlpbmcgV2luQXBwRHJpdmVyIGlzIGluc3RhbGxlZCB3aXRoIGNvcnJlY3QgY2hlY2tzdW1cIik7XHJcbiAgcmV0dXJuIGF3YWl0IGZzLmV4aXN0cyhXQURfSU5TVEFMTF9QQVRIKSAmJlxyXG4gICAgICAgICBhd2FpdCBmcy5tZDUoV0FEX0lOU1RBTExfUEFUSCkgPT09IFdBRF9FWEVfTUQ1O1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBpc0FkbWluICgpIHtcclxuICBsZXQgdGVzdEZpbGVQYXRoID0gcGF0aC5yZXNvbHZlKFwiL1wiLCBcIldpbmRvd3NcIiwgXCJTeXN0ZW0zMlwiLCBcIndhZC10ZXN0LnR4dFwiKTtcclxuICB0cnkge1xyXG4gICAgYXdhaXQgZnMucmltcmFmKHRlc3RGaWxlUGF0aCk7XHJcbiAgICBhd2FpdCBmcy53cml0ZUZpbGUodGVzdEZpbGVQYXRoLCBcImZvb1wiKTtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH0gY2F0Y2ggKGlnbikge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gc2V0dXBXQUQgKCkge1xyXG4gIGlmICghc3lzdGVtLmlzV2luZG93cygpKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW4gb25seSBkb3dubG9hZCBXaW5BcHBEcml2ZXIgb24gV2luZG93cyFcIik7XHJcbiAgfVxyXG5cclxuICBpZiAoYXdhaXQgdmVyaWZ5V0FEKCkpIHtcclxuICAgIGxvZy5pbmZvKFwiV2luQXBwRHJpdmVyLmV4ZSBhbHJlYWR5IGV4aXN0cyBhdCBjb3JyZWN0IGNoZWNrc3VtLCBcIiArXHJcbiAgICAgICAgICAgICAgICBcIm5vdCByZS1kb3dubG9hZGluZ1wiKTtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIGxvZy5pbmZvKFwiV2luQXBwRHJpdmVyLmV4ZSBkb2Vzbid0IGV4aXN0IGF0IHRoZSBjb3JyZWN0IHZlcnNpb24sIHNldHRpbmcgdXBcIik7XHJcblxyXG4gIGlmICghYXdhaXQgaXNBZG1pbigpKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIG5vdCBhbiBhZG1pbmlzdHJhdG9yOyBwbGVhc2UgcmVpbnN0YWxsIGFzIGFkbWluXCIpO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgbXNpUGF0aCA9IGF3YWl0IGRvd25sb2FkV0FEKCk7XHJcbiAgYXdhaXQgaW5zdGFsbFdBRChtc2lQYXRoKTtcclxuICBpZiAoIWF3YWl0IHZlcmlmeVdBRCgpKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnN0YWxsZWQgdmVyc2lvbiBvZiBXaW5BcHBEcml2ZXIgZmFpbGVkIGNoZWNrc3VtIGNoZWNrXCIpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IHsgZG93bmxvYWRXQUQsIHNldHVwV0FELCB2ZXJpZnlXQUQsIGluc3RhbGxXQUQsIFdBRF9JTlNUQUxMX1BBVEgsXHJcbiAgICAgICAgIFdBRF9HVUlEIH07XHJcbmV4cG9ydCBkZWZhdWx0IHNldHVwV0FEO1xyXG4iXX0=