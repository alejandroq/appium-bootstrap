#!/usr/bin/env node

require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _yargs = require('yargs');

var _yargs2 = _interopRequireDefault(_yargs);

var _asyncbox = require('asyncbox');

var _libServer = require('./lib/server');

var _libDriver = require('./lib/driver');

var _libDesiredCaps = require('./lib/desired-caps');

var DEFAULT_HOST = "localhost";
var DEFAULT_PORT = 4723;

function main() {
  var port, host;
  return _regeneratorRuntime.async(function main$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        port = _yargs2['default'].argv.port || DEFAULT_PORT;
        host = _yargs2['default'].argv.host || DEFAULT_HOST;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap((0, _libServer.startServer)(port, host));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

if (require.main === module) {
  (0, _asyncbox.asyncify)(main);
}

exports.WindowsDriver = _libDriver.WindowsDriver;
exports.commonCapConstraints = _libDesiredCaps.commonCapConstraints;
exports['default'] = _libDriver.WindowsDriver;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7cUJBR2tCLE9BQU87Ozs7d0JBQ0EsVUFBVTs7eUJBQ1AsY0FBYzs7eUJBQ1osY0FBYzs7OEJBQ1Asb0JBQW9COztBQUV6RCxJQUFNLFlBQVksR0FBRyxXQUFXLENBQUM7QUFDakMsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDOztBQUUxQixTQUFlLElBQUk7TUFDYixJQUFJLEVBQ0osSUFBSTs7OztBQURKLFlBQUksR0FBRyxtQkFBTSxJQUFJLENBQUMsSUFBSSxJQUFJLFlBQVk7QUFDdEMsWUFBSSxHQUFHLG1CQUFNLElBQUksQ0FBQyxJQUFJLElBQUksWUFBWTs7eUNBQzdCLDRCQUFZLElBQUksRUFBRSxJQUFJLENBQUM7Ozs7Ozs7Ozs7Q0FDckM7O0FBRUQsSUFBSSxPQUFPLENBQUMsSUFBSSxLQUFLLE1BQU0sRUFBRTtBQUMzQiwwQkFBUyxJQUFJLENBQUMsQ0FBQztDQUNoQjs7UUFFUSxhQUFhO1FBQUcsb0JBQW9CIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8vIHRyYW5zcGlsZTptYWluXHJcblxyXG5pbXBvcnQgeWFyZ3MgZnJvbSAneWFyZ3MnO1xyXG5pbXBvcnQgeyBhc3luY2lmeSB9IGZyb20gJ2FzeW5jYm94JztcclxuaW1wb3J0IHsgc3RhcnRTZXJ2ZXIgfSBmcm9tICcuL2xpYi9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBXaW5kb3dzRHJpdmVyIH0gZnJvbSAnLi9saWIvZHJpdmVyJztcclxuaW1wb3J0IHsgY29tbW9uQ2FwQ29uc3RyYWludHMgfSBmcm9tICcuL2xpYi9kZXNpcmVkLWNhcHMnO1xyXG5cclxuY29uc3QgREVGQVVMVF9IT1NUID0gXCJsb2NhbGhvc3RcIjtcclxuY29uc3QgREVGQVVMVF9QT1JUID0gNDcyMztcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIG1haW4gKCkge1xyXG4gIGxldCBwb3J0ID0geWFyZ3MuYXJndi5wb3J0IHx8IERFRkFVTFRfUE9SVDtcclxuICBsZXQgaG9zdCA9IHlhcmdzLmFyZ3YuaG9zdCB8fCBERUZBVUxUX0hPU1Q7XHJcbiAgcmV0dXJuIGF3YWl0IHN0YXJ0U2VydmVyKHBvcnQsIGhvc3QpO1xyXG59XHJcblxyXG5pZiAocmVxdWlyZS5tYWluID09PSBtb2R1bGUpIHtcclxuICBhc3luY2lmeShtYWluKTtcclxufVxyXG5cclxuZXhwb3J0IHsgV2luZG93c0RyaXZlciwgIGNvbW1vbkNhcENvbnN0cmFpbnRzIH07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBXaW5kb3dzRHJpdmVyO1xyXG5cclxuIl19