/* eslint-disable no-console */

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _libInstaller = require('../../lib/installer');

var _teen_process = require('teen_process');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('downloading WAD', function () {
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _teen_process.exec)('msiexec', ['/X{' + _libInstaller.WAD_GUID + '}', '/q']));

        case 3:
          context$2$0.next = 10;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

          // if we get a 1605 error, that's ok, that means nothing was installed
          // if we get some other kind of error, we should fail this test
          if (context$2$0.t0.code === 1603) {
            console.log("You need to be an admin to run this test");
          }

          if (!(context$2$0.t0.code !== 1605)) {
            context$2$0.next = 10;
            break;
          }

          throw context$2$0.t0;

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });

  it('should download and validate WinAppDriver', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _libInstaller.setupWAD)());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});

// uninstall WAD first
// contains its own verification of md5 so not much to do
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3RcXGUyZVxcaW5zdGFsbGVyLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OzRCQUVtQyxxQkFBcUI7OzRCQUNuQyxjQUFjOztvQkFDbEIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7QUFFN0Msa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixRQUFRLENBQUMsaUJBQWlCLEVBQUUsWUFBTTtBQUNoQyxRQUFNLENBQUM7Ozs7OzsyQ0FHRyx3QkFBSyxTQUFTLEVBQUUsdUNBQW9CLElBQUksQ0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7QUFJaEQsY0FBSSxlQUFJLElBQUksS0FBSyxJQUFJLEVBQUU7QUFDckIsbUJBQU8sQ0FBQyxHQUFHLENBQUMsMENBQTBDLENBQUMsQ0FBQztXQUN6RDs7Z0JBQ0csZUFBSSxJQUFJLEtBQUssSUFBSSxDQUFBOzs7Ozs7Ozs7Ozs7R0FJeEIsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQywyQ0FBMkMsRUFBRTs7Ozs7MkNBQ3hDLDZCQUFVOzs7Ozs7O0dBQ2pCLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0XFxlMmVcXGluc3RhbGxlci1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXHJcblxyXG5pbXBvcnQgeyBzZXR1cFdBRCwgV0FEX0dVSUQgfSBmcm9tICcuLi8uLi9saWIvaW5zdGFsbGVyJztcclxuaW1wb3J0IHsgZXhlYyB9IGZyb20gJ3RlZW5fcHJvY2Vzcyc7XHJcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xyXG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XHJcblxyXG5jaGFpLnNob3VsZCgpO1xyXG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XHJcblxyXG5kZXNjcmliZSgnZG93bmxvYWRpbmcgV0FEJywgKCkgPT4ge1xyXG4gIGJlZm9yZShhc3luYyAoKSA9PiB7XHJcbiAgICAvLyB1bmluc3RhbGwgV0FEIGZpcnN0XHJcbiAgICB0cnkge1xyXG4gICAgICBhd2FpdCBleGVjKCdtc2lleGVjJywgW2AvWHske1dBRF9HVUlEfX1gLCAnL3EnXSk7XHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgLy8gaWYgd2UgZ2V0IGEgMTYwNSBlcnJvciwgdGhhdCdzIG9rLCB0aGF0IG1lYW5zIG5vdGhpbmcgd2FzIGluc3RhbGxlZFxyXG4gICAgICAvLyBpZiB3ZSBnZXQgc29tZSBvdGhlciBraW5kIG9mIGVycm9yLCB3ZSBzaG91bGQgZmFpbCB0aGlzIHRlc3RcclxuICAgICAgaWYgKGVyci5jb2RlID09PSAxNjAzKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJZb3UgbmVlZCB0byBiZSBhbiBhZG1pbiB0byBydW4gdGhpcyB0ZXN0XCIpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChlcnIuY29kZSAhPT0gMTYwNSkge1xyXG4gICAgICAgIHRocm93IGVycjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICBpdCgnc2hvdWxkIGRvd25sb2FkIGFuZCB2YWxpZGF0ZSBXaW5BcHBEcml2ZXInLCBhc3luYyAoKSA9PiB7XHJcbiAgICBhd2FpdCBzZXR1cFdBRCgpOyAvLyBjb250YWlucyBpdHMgb3duIHZlcmlmaWNhdGlvbiBvZiBtZDUgc28gbm90IG11Y2ggdG8gZG9cclxuICB9KTtcclxufSk7Il19